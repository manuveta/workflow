
name: imprime llama wf lib y action 

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  #push:
  #  branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    # inputs:
    #   environment:
    #     description: 'Selecciona el entorno'
    #     required: true
    #     default: 'DESARROLLO'
    #     type: choice
    #     options:
    #       - DESARROLLO
    #       - QA
    #       - PROD
    inputs:
      name:
        description: 'Selecciona el nombre'
        required: true
        default: "Manuel de J. R. Velazquez Tapia"
        type: choice
        options:
          - Manuel
          - Jesus
          - Ramiro
      entorno:
        description: 'Selecciona el entorno'
        required: true
        default: "DESARROLLO"
        type: choice
        options:
          - DESARROLLO
          - CALIDAD
          - PRODUCCION
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  imprime:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #declaramos entorno para acceder a las variables y secretos del repositorio
    environment: "${{ github.event.inputs.entorno || 'DESARROLLO' }}"

    steps:
      - name: imprimir secretos y variables, por repo y por entorno
        run: |
          echo REPOSITORY SECRET is ${{ secrets.NOMBRE_SECRETO }}
          echo entorno DESARROLLO SECRET is ${{ secrets.SEGUNDO_NOMBRE_ENTORNO }}
          echo REPOSITORY var VAR_SEGUNDO_APELLIDO_REPO is ${{ vars.VAR_SEGUNDO_APELLIDO_REPO }}
          echo entorno DESARROLLO var VAR_APELLIDO is ${{ vars.VAR_APELLIDO }}
  #prepara las variables para consumir en el workflowlib
  preparar-vars:
    runs-on: ubuntu-latest
    environment: DESARROLLO
    outputs:
      var1: ${{ steps.set_vars.outputs.var1 }}
      var2: ${{ steps.set_vars.outputs.var2 }}
      secreto2: ${{ steps.set_vars.outputs.secreto2 }}
    steps:
      - name: Obtener variables
        id: set_vars
        run: |
          echo "var1=${{ vars.VAR_SEGUNDO_APELLIDO_REPO }}" >> $GITHUB_OUTPUT
          echo "var2=${{ vars.VAR_APELLIDO }}" >> $GITHUB_OUTPUT
          echo "secreto2=${{ secrets.SEGUNDO_NOMBRE_ENTORNO }}" >> $GITHUB_OUTPUT
          echo "secreto2=${{ secrets.SEGUNDO_NOMBRE_ENTORNO }}"

  llamar-workflowlib:
    needs: preparar-vars
    uses: manuveta/reusable_workflows/.github/workflows/workflowlib_imprimevars.yml@main #invoca reusable wf de un repo de organizacion
    with:
      VAR_1: ${{ needs.preparar-vars.outputs.var1 }}
      VAR_2: ${{ needs.preparar-vars.outputs.var2 }}
      SECRETO_2: ${{ needs.preparar-vars.outputs.secreto2 }} #github va a bloquear el acceso a los secretos de los workflows que llaman a otros workflows se debe poner a nivel repo
    secrets:
      SECRETO_1: ${{ secrets.NOMBRE_SECRETO }}

  llamar-action:
    runs-on: ubuntu-latest
    permissions: #setemaos los permisos del token de la action de checkout
      contents: read
    steps:
      - name: invoca action creado
        uses: manuveta/actions@main
        with:
          name: "Manuel de J. R. Velazquez Tapia"
      - name: invoca action del marketplace
        uses: actions/checkout@v4 #esto es para poder usar el checkout de la action del marketplace
        with:
          token: ${{ secrets.GITHUB_TOKEN }} #esto es para poder usar el checkout de la action del marketplace, aunque no es necesario porque esta en el repo de la organizacion
      - name: listar contenido del repo
        run: |
              ls -la #listamos el contenido del repo
              echo "------------------------------"
              cd .github/workflows 
              ls -la
              echo "------------------------------"
              cat wf_todos.yml 
              echo "------------------------------"
              echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCG4YkPacYo0cXUL2HHMFSg+4pg9CpYS/vbyEJz38uMkJp56cUmmiuOBWmk UdB3fl1SYf295FeBLJmW6uEKnbT8HShoLFKo8VFIErqzOzpLLN4|JQ3yLb4d6UFdUCYUhZvsPN+d+bp1XBEkgvMHwxoc3jYUWUJrF+hQ8JrupqS/h5eAXQoAEnd1gKUKEURLZG6U5WzhgdNBYX2ieg32NzcrNuGdH/ekVRnhygiWNHAvsrpEjMdEUu/XsUfWZ2tfv8qW550DYV6eWW3+E3eU6zx4EbCvuQXvVpRB0KDQrsmCOKFs+MmmU5qhpOnThZ" >> PASSWORD

  llamar-action-prueba:
      runs-on: ubuntu-latest
      environment: "${{ github.event.inputs.entorno || 'DESARROLLO' }}"
      permissions: #setemaos los permisos del token de la action de checkout
        contents: read
      steps:
        - name: invoca action creado
          uses: manuveta/pruebaaction@main
          with:
            name: "${{ github.event.inputs.name || 'Manuel de jesus ramiro vt' }}" #seteamos el nombre del input del workflow_dispatch
            nombreentorno: ${{vars.NOMBRE}}

  ejecuta-api-github:
    runs-on: ubuntu-latest
    steps:
      - name: Commits de usuario con el api
        run: |
          USUARIO="AL07183522" 
          REPO="manuveta/workflow"        
          echo "Buscando commits de $USUARIO en $REPO..."
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/$REPO/commits?author=$USUARIO"

  consulta-commits-action:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Consulta commits usando action personalizada
        id: consulta_commits
        uses: manuveta/action-commits@main
        with:
           usuario: "AL07183522"
           org_user: "manuveta"
           repositorio: "workflow"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: consulta output de action commits
        run: |
          echo "${{ steps.consulta_commits.outputs.count }} commits encontrados:"
          echo "${{ steps.consulta_commits.outputs.commits }}"
  
  consulta-fecha:
  runs-on: ubuntu-latest
  uses: manuveta/reusable_workflows/.github/workflows/rwfl_imprimefecha.yml@main
  with:
  steps:
    - name: Capturar salida de fecha
      id: captura_fecha
      run: echo "Fecha capturada: ${{ steps.some_step_id.outputs.some_output_key }}"
  outputs:
    fecha_salida: ${{ steps.captura_fecha.outputs.some_output_key }}